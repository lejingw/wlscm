<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ProcPackageNewline">
	<typeAlias alias="ProcPackageNewline" type="com.jatools.vo.stock.ProcPackageNewline" />
	
	<resultMap id="result" class="ProcPackageNewline">
		<result property="lineid" column="lineid"/>
		<result property="billid" column="billid"/>
		<result property="ornaCode" column="orna_code"/>
		<result property="ornaBarcode" column="orna_barcode"/>
		<result property="allQty" column="all_qty"/>
		<result property="grains" column="grains"/>
		<result property="posCost" column="pos_cost"/>
		<result property="status" column="status"/>
		<result property="memo" column="memo"/>
		<result property="analysisArangeId" column="analysis_arange_id"/>
		<result property="createDate" column="create_date"/>
		<result property="createId" column="create_id"/>
		<result property="updateDate" column="update_date"/>
		<result property="updateId" column="update_id"/>
		<result property="posMoney" column="pos_money"/>
		<result property="poundsDiff" column="pounds_diff"/>
		<result property="inivCost" column="iniv_cost"/>
	</resultMap>
	<sql id="ProcPackageNewline_columns_all">
		lineid, billid, orna_code, orna_barcode, all_qty, grains, pos_cost, 
		status, memo, create_date, create_id, update_date, update_id, analysis_arange_id,
		pos_money, pounds_diff, iniv_cost
    </sql>
    <!-- 获取分页数据 -->
	<select id="ProcPackageNewline.getProcPackageNewlinePageData" resultMap="result" parameterClass="map">
		select <include refid="ProcPackageNewline_columns_all"/> from (select rownum rownum_ , AA.* from (
		
			select <include refid="ProcPackageNewline_columns_all"/>  from jat_proc_package_newline a 
			where 1 = 1
			<isNotEmpty property="lineno" prepend="and">  a.lineno = #lineno# </isNotEmpty>
			<isNotEmpty property="ornaCode" prepend="and">  a.orna_code = #ornaCode# </isNotEmpty>
			order by a.lineid DESC
			
		) AA ) where <![CDATA[rownum_ >= $start$]]> and <![CDATA[rownum <= $limit$]]>
		
	</select>
	<!-- 获取总条数 -->
    <select id="ProcPackageNewline.getProcPackageNewlineTotalCount" resultClass="int" parameterClass="map">
		select count(1) from jat_proc_package_newline a
		where 1 = 1
		<isNotEmpty property="lineno" prepend="and">  a.lineno = #lineno# </isNotEmpty>
		<isNotEmpty property="ornaCode" prepend="and">  a.orna_code = #ornaCode# </isNotEmpty>
	</select>
    <!-- 保存数据 -->
    <insert id="ProcPackageNewline.saveProcPackageNewline" parameterClass="ProcPackageNewline">
    	<selectKey resultClass="string" keyProperty="lineid" type="pre">
			select JAT_PROC_PACKAGE_NEWLINE_SEQ.nextval as lineid from dual
		</selectKey>
		insert into jat_proc_package_newline(<include refid="ProcPackageNewline_columns_all"/>)
		 values(
			 #lineid#, #billid#, #ornaCode#, #ornaBarcode#, #allQty#, #grains#, #posCost#, 
			 #status#, #memo#, #createDate#, #createId#, #updateDate#, #updateId#, #analysisArangeId#,
			 #posMoney#, #poundsDiff#, #inivCost#
		)
    </insert>
    <!-- 根据id获取记录对象 -->
    <select id="ProcPackageNewline.getProcPackageNewline" resultClass="ProcPackageNewline" resultMap="result" parameterClass="string">
    	select <include refid="ProcPackageNewline_columns_all"/> from jat_proc_package_newline a where a.lineid = #value#
    </select>
    
    <!-- 根据单号获取记录对象 -->
    <select id="ProcPackageNewline.getProcPackageNewlineList" resultClass="ProcPackageNewline" resultMap="result" parameterClass="string">
    	select <include refid="ProcPackageNewline_columns_all"/> from jat_proc_package_newline a where a.billid = #value#
    </select>
    
    <!-- 修改信息 -->
    <update id="ProcPackageNewline.updateProcPackageNewline" parameterClass="ProcPackageNewline">
		update jat_proc_package_newline a set 
		a.orna_code = #ornaCode#, 
		a.orna_barcode = #ornaBarcode#, 
		a.all_qty = #allQty#, 
		a.grains = #grains#, 
		a.pos_cost = #posCost#, 
		a.memo = #memo#, 
		a.update_date = #updateDate#, 
		a.update_id = #updateId#,
		a.pos_money = #posMoney#,
		a.pounds_diff = #poundsDiff#,
		a.iniv_cost = #inivCost#,
		a.analysis_arange_id = #analysisArangeId#
		where a.lineid = #lineid#
	</update>
	<delete id="ProcPackageNewline.deleteProcPackageNewline" parameterClass="string">
		delete from jat_proc_package_newline a where a.lineid = #value#
	</delete>
	
	<delete id="ProcPackageNewline.deleteProcPackageNewlineByBillid" parameterClass="string">
		delete from jat_proc_package_newline a where a.billid = #value#
	</delete>
	
	<!-- 入库事务 -->
	<insert id="ProcPackageNewline.instockInsertTrans" parameterClass="com.jatools.vo.stock.StockTransDO">
		insert into  jat_mater_trans 
		(
		      TRANS_ID,
		      ORG_ID,STOCK_ID,ITEM_CLASS_ID,ORNA_CLASS_ID,STYLEITEMCLASS,
		      STYLEMIDDLECLASS,STYLEORNACLASS,STYLE_ID,ALAYSIS_ID,ORNA_CODE,ORNA_BARCODE,
		      ORNA_DSC,UNIT_ID,NOW_QTY,ALL_QTY,GRAINS,POS_COST,POS_MONEY,TRANS_FLAG,
		      TRANS_SOURCE_BILL,TRANS_SOURCE_NO,TRANS_SOURCE_TYPE,TRANS_FINANCE,
		      TRANS_DATE,TRANS_COST,TRANS_MONEY,TRANS_QTY,IS_PSALE,
		      CREATE_DATE  ,CREATE_ID , ORNA_CODE_SOURCE
		
		) select 
		      jat_mater_trans_seq.nextval,
		      b.org_id as ORG_ID, b.stock_id as STOCK_ID, 
          	  #itemClassId#,#ornaClassId#,#styleitemclass#,
		      #stylemiddleclass#,#styleornaclass#,#styleId#,a.analysis_arange_id as ALAYSIS_ID,a.orna_code as ORNA_CODE,a.orna_barcode as ORNA_BARCODE, 
		      #ornaDsc#,#unitId#, a.all_qty as NOW_QTY, a.all_qty as ALL_QTY, a.grains as GRAINS,a.pos_cost as POS_COST,a.pos_money as POS_MONEY,1,
		      #transSourceBill#, #transSourceNo#, 2, #transFinance#,
		      #transDate#, a.pos_cost as TRANS_COST, a.pos_money as TRANS_MONEY,a.all_qty as TRANS_QTY,#isPsale#,
		      #createDate#, #userId#, #ornaCodeSource#
		  from jat_proc_package_newline a
		  	left join jat_proc_package_head b on a.billid = b.billid
		  where a.lineid = #lineid#
	</insert>
	
	<insert id="ProcPackageNewline.insertInivFromMater" parameterClass="com.jatools.vo.stock.MaterIniv">
		insert into jat_mater_iniv (
			ID, 
			NO, ALLOW_INIV_TYPE, STOCK_ID, INIV_ORG, INIV_DIRECTION, INIV_DATE, TRANSCEIVER_TYPE, 
			STOCK_ORG, PRE_ALLOT_ORG, DEPT_ID, SALESMAN, NOTES, HANDOVER_BILL_ID, VENDER_ID, 
			ARTICLE_TYPE_ID, ITEM_CLASS_ID, ORNA_CLASS_ID, ANALYSIS_ARANGE_ID, STYLE_ITEM_ID, 
			STYLE_MIDDLE_ID,  STYLE_ID, UNIT_ID, QUANTITY, ORNA_NAME, ORNA_CODE, SIZE_ID, 
			IS_CONSIGN, IS_CUSTOM, COST_PRICE, 
			TOTAL_COST, SMALL_LABEL_TYPE, DECIMAL_NUM, TRACK_NAME, IDENT_ID, HRD_CERT, GIA_CERT, IGI_CERT, 
			AGS_CERT, TOTAL_NUM, QUALITY_ID, BASIC_PRICE, GROUPS, POS_AMOUNT, SPECIAL_WEIGHT, WEIGHT, SUMMARY_ID, 
			NUCLEAR_BILL_ID, MAIN_MODIFICATION, MAIN_SHAPE_ID, MAIN_COLOR_GRADE_ID, CLEAN_ID, COLOR_ID, CUT_ID, 
			BRACKETCOLOR_ID, WEAR_ID, PRICE_ATTR_GROUP, QLTY_ID, SPECIAL_WORK_PRICE, STRING_WORK_PRICE, 
			CUT_WIDE_SCALE, CUT_DEEP_SCALE, SYMMETRY_ID, POLISHINE_ID, FLUORESCENCE_ID, WAISTLINE_ID, 
			VERTEX_ID, FACTORY_FEE, FACTORY_FEE_PRICE, MAIN_WEIGHT, MAIN_STONE_NUM, PART_STONE_WEIGHT, 
			PART_STONE_CONTENT, PART_STONE_NUM, ZODIAC, ALL_QTY, 
			AVG_NUM, 
			IS_UNDER_3FEN, LUCKY_DSC, INLAYNO, 
			UPDATEDATE, CREATEUSERID, CREATEDATE, FACTORY_STYLE_ID, APPROVALUSERID, APPROVALDATE, SRC_BILL_NO, 
			SRC_BILL_ID, STATE, CONSIGNMENT_TYPE, FACTORY_FEE_TYPE, IS_OLD_OTC, PART_CONTENT, LUCKY_WORD, 
			IS_TEAR_STONE, STYLE_TYPE, IS_MUTI_PART, STYLE_ORNA_ID, ISSUCHINDA, MATERIAL_ID, THEME_COEFFICIENT, 
			NCOEFFICIENT, SLOT_ID, CALCPRICE_NO, ORNA_BARCODE, CUSTOMIZE_NO, BRACKET_STYLE_ID, IS_DBL_LABEL, 
			TAGS, PRIVATE_TYPE, LACK_MATERIAL, LACK_MATERIAL_NUM, LACK_MATERIAL_WEIGHT, VERIFICATION_FLAG, 
			INIV_FLAG, OLD_ORNA_CODE, SRC_BILL_CODE, COST_UNIT, LOCK_FLAG, INIV_COST
		)
		select 
			jat_mater_iniv_seq.nextval,
			#no#, 3, a.STOCK_ID, a.org_id as INIV_ORG, null, #inivDate#, null, 
			null, null, null, null, null, #handoverBillId#, a.supplier_id as VENDER_ID, 
			b.ARTICLE_TYPE_ID, a.ITEM_CLASS_ID, a.ORNA_CLASS_ID, a.alaysis_id as ANALYSIS_ARANGE_ID, c.STYLEITEMCLASS as STYLE_ITEM_ID, 
			c.STYLEMIDDLECLASS as STYLE_MIDDLE_ID, a.STYLE_ID, a.sale_unit_id as UNIT_ID, a.now_qty as QUANTITY, a.orna_dsc as ORNA_NAME, a.ORNA_CODE, a.SIZE_ID, 
			a.IS_CONSIGN, a.IS_CUSTOM, a.real_unit_cost as COST_PRICE, 
			a.real_total_cost as TOTAL_COST, a.tag_type as SMALL_LABEL_TYPE, 2, null, a.IDENT_ID, a.HRD_CERT, a.GIA_CERT, a.IGI_CERT, 
			a.AGS_CERT, a.stone_total_num as TOTAL_NUM, a.QUALITY_ID, a.BASIC_PRICE, a.GROUPS, a.POS_AMOUNT, a.SPECIAL_WEIGHT, null, a.SUMMARY_ID, 
			a.NUCLEAR_BILL_ID, null, a.MAIN_SHAPE_ID, a.MAIN_COLOR_GRADE_ID, a.CLEAN_ID, a.COLOR_ID, a.CUT_ID, 
			a.BRACKETCOLOR_ID, a.WEAR_ID, a.PRICE_ATTR_GROUP, a.QLTY_ID, a.SPECIAL_WORK_PRICE, a.STRING_WORK_PRICE, 
			a.CUT_WIDE_SCALE, a.CUT_DEEP_SCALE, a.SYMMETRY_ID, a.POLISHINE_ID, a.FLUORESCENCE_ID, a.WAISTLINE_ID, 
			a.VERTEX_ID, null, null, a.MAIN_WEIGHT, a.main_num as MAIN_STONE_NUM, a.part_weight as PART_STONE_WEIGHT, 
			a.part_content as PART_STONE_CONTENT, a.part_num as PART_STONE_NUM, a.ZODIAC, a.ALL_QTY, 
			nvl((select a.all_qty/a.stone_now_num from dual where a.stone_now_num>0), 0) as AVG_NUM,
			null, null, null, 
			#updatedate#, #createuserid#, #createdate#, a.FACTORY_STYLE_ID, null, null, #srcBillNo#, 
			#srcBillId#, 11, null, null, null, a.PART_CONTENT, null, 
			null, a.style_type_id as STYLE_TYPE, a.IS_MUTI_PART, c.STYLEORNACLASS as STYLE_ORNA_ID, null, a.MATERIAL_ID, null, 
			null, null, null, a.ORNA_BARCODE, a.CUSTOMIZE_NO, null, a.IS_DBL_LABEL, 
			null, null, null, null, null, null, 
			2, null, 'JJ', a.COST_UNIT, 0, INIV_COST
		from ic_mater_active a
			left join jas_bd_item_class b on a.item_class_id = b.ITEM_CLASS_ID
			left join jas_bd_style c on a.style_id = c.STYLEID
		where 1=1 
			and a.orna_code = #ornaCode#
	</insert>
</sqlMap>